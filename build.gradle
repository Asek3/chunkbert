plugins {
    id "com.gtnewhorizons.retrofuturagradle" version "1.3.34"
}

archivesBaseName = "${project.mod_id}-${project.mod_version}"

minecraft {
    mcVersion.set(project.minecraft_version)
    username.set("Developer")
}

repositories {
    mavenCentral()
    maven {
        name 'SpongePowered Maven'
        url 'https://repo.spongepowered.org/maven'
    }
    maven {
        url "https://maven.cleanroommc.com"
    }
}

dependencies {
    def mixinBooter = modUtils.enableMixins("zone.rong:mixinbooter:8.9", "mixins.chunkbert.refmap.json")
    api (mixinBooter) {
        transitive = false
    }
    annotationProcessor "org.ow2.asm:asm-debug-all:5.2"
    annotationProcessor "com.google.guava:guava:32.1.2-jre"
    annotationProcessor "com.google.code.gson:gson:2.8.9"
    annotationProcessor (mixinBooter) {
        transitive = false
    }

    implementation fileTree(dir: 'libs', include: ['*.jar'])
}

def coreModManifest = {
    attributes "FMLCorePlugin": "com.embeddedt.chunkbert.core.ChunkbertPlugin"
    attributes "FMLCorePluginContainsFMLMod": true
    attributes "ForceLoadAsMod": true
    attributes "Maven-Artifact": "${group}:${name}:${version}"
}

jar {
    manifest coreModManifest

    from sourceSets.main.output

    rename '(.+_at.cfg)', 'META-INF/$1'
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", "1.12.2"
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    filesMatching("mcmod.info") { fcd ->
        fcd.expand(
                'mod_id': project.mod_id,
                'mod_name': project.mod_name,
                'mod_version': project.mod_version,
                'mod_description': project.mod_description,
                'minecraft_version': project.minecraft_version
        )
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }
}